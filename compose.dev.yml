# Docker Environment Variables
# build > args = Build-time Environment Variables, rebuild required on change of these. These remain in the image history so should not be used for secrets
# env_file = Runtime Environment Variables
# environment = Runtime Environment Variables with higher precedence than env_file
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        - NODE_ENV=development # Build-time environment variable
    container_name: balanced_app_dev
    env_file:
      - .env.development # Runtime environment variables
    environment:
      # Runtime environment variables - these override env_file
      NODE_ENV: 'development'
    ports:
      - '3000:3000'
    volumes:
      # Mount source code for development
      # This mounts the ./src directory from your host machine to /app/src in the container. The :ro makes it read-only, so there is live reloading of the app when you change source code without permission issues
      - ./src:/app/src:ro
      - ./public:/app/public:ro
      - ./prisma:/app/prisma:ro
      # Mount config files
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./.env.development:/app/.env:ro
      # Keep container versions of these directories to avoid permission issues
      # This creates an "anonymous volume" that preserves the container's version of /app/node_modules/ and allow write access to it without permission issues, so i.e. when next tries to write in .next, or prisma to generated it can
      - /app/node_modules/
      - /app/.next/
      - /app/src/generated
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "npx prisma generate && npx prisma migrate deploy && npm run dev"

  db:
    container_name: balanced_db_dev
    image: postgres:16-alpine
    restart: always
    env_file:
      - .env.development
    environment:
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
      POSTGRES_DB: balanced_dev
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --lc-collate=C --lc-ctype=C'
    ports:
      - '${DB_PORT}:5432' # host:container
    volumes:
      # persist the database data between container restarts in dev
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  studio:
    container_name: balanced_studio_dev
    image: node:18-alpine
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.development
    command: sh -c "npx prisma studio --port 5555"
    ports:
      - '5555:5555'

volumes:
  postgres_data_dev:
    name: balanced_postgres_dev
