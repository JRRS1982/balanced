# syntax=docker/dockerfile:1

# Base stage with common dependencies
FROM node:18-alpine AS base
WORKDIR /app
RUN apk add --no-cache libc6-compat

# Install dependencies
FROM base AS deps
COPY package.json package-lock.json ./
RUN npm ci

# Build the application
FROM base AS builder
COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN npm run build

# Final production stage
FROM base AS runner
ENV NODE_ENV=production
WORKDIR /app

# Create a non-root user
RUN addgroup --system --gid 1001 nodejs \
  && adduser --system --uid 1001 nextjs

# Set up directories and permissions
RUN mkdir .next \
  && chown -R nextjs:nodejs .next

# Copy the built app and required files
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

# Copy lib directory which contains database code
COPY --from=builder /app/lib ./lib
COPY --from=builder /app/prisma ./prisma

# Set permissions and switch user
RUN chown -R nextjs:nodejs ./
USER nextjs

# Expose the application port and define entrypoint
EXPOSE 3000
CMD ["npm", "start"]